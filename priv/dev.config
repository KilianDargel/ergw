%-*-Erlang-*-
[{setup, [{data_dir, "/var/lib/ergw"},
	  {log_dir,  "/var/log/gtp-c-node"}				%% NOTE: lager is not using this
	 ]},

 {ergw, [{'$setup_vars',
	  [{"ORIGIN", {value, "epc.mnc001.mcc001.3gppnetwork.org"}}]},
	 {http_api,
	  [{port, 8080},
	   {ip, {0,0,0,0}}
	  ]},
	 {sockets,
	  [{irx, [{type, 'gtp-c'},
		  {ip,  {172,20,16,90}},
		  {netdev, "grx"}
		  %% {netns, "/var/run/netns/grx"}
		 ]},
	   {'proxy-irx', [{type, 'gtp-c'},
			  {ip,  {172,20,16,91}},
			  %% {ip, {16#2001, 16#6f8, 16#12d9, 16#16, 16#10, 0, 0, 16#5b}},
			  {netdev, "proxy"}
			  %% {netns, "/var/run/netns/proxy"}
			 ]}
	  ]},

	 {sx_socket,
	  [{node, 'ergw'},
	   {name, 'ergw'},
	   {ip, {0,0,0,0}
	   %%{ip, {127,0,0,1}
	   }
	  ]},

	 {handlers,
	  [{'h1', [{handler, pgw_s5s8_proxy},
		   {protocol, gn},
		   {sockets, [irx]},
		   {proxy_sockets, ['proxy-irx']},
		   {node_selection, [default]}
		  ]},
	   {'h2', [{handler, pgw_s5s8_proxy},
		   {protocol, s5s8},
		   {sockets, [irx]},
		   {proxy_sockets, ['proxy-irx']},
		   {node_selection, [default]}
		  ]}
	  ]},

	 {node_selection,
	  [{default,
	    {static,
	     [
	      %% APN NAPTR alternative
	      {"_default.apn.$ORIGIN", {300,64536},
	       [{"x-3gpp-pgw","x-s5-gtp"},{"x-3gpp-pgw","x-s8-gtp"},
		{"x-3gpp-pgw","x-gn"},{"x-3gpp-pgw","x-gp"}],
	       "topon.s5s8.pgw.$ORIGIN"},
	      {"_default.apn.$ORIGIN", {300,64536},
	       [{"x-3gpp-upf","x-sxa"}],
	       "topon.sx.prox01.$ORIGIN"},

	      {"web.apn.$ORIGIN", {300,64536},
	       [{"x-3gpp-pgw","x-s5-gtp"},{"x-3gpp-pgw","x-s8-gtp"},
		{"x-3gpp-pgw","x-gn"},{"x-3gpp-pgw","x-gp"}],
	       "topon.s5s8.pgw.$ORIGIN"},
	      {"web.apn.$ORIGIN", {300,64536},
	       [{"x-3gpp-upf","x-sxa"}],
	       "topon.sx.prox01.$ORIGIN"},

	      %% A/AAAA record alternatives
	      {"topon.s5s8.pgw.$ORIGIN",  [{172, 20, 16, 89}], []},
	      {"topon.sx.prox01.$ORIGIN", [{172,21,16,1}], []}
	     ]
	    }
	   },
	   {mydns,
	    {dns, {{172,20,16,75}, 53}}}
	  ]
	 }
	]},

%% {exometer_core, [{reporters, [{exometer_report_netdata, []}]}]},

 {ergw_aaa, [
	     %% {ergw_aaa_provider, {ergw_aaa_mock, [{shared_secret, <<"MySecret">>}]}}
	     %% {ergw_aaa_provider,
	     %%  {ergw_aaa_radius,
	     %%   [{nas_identifier,<<"ac1.ac.tplab">>},
	     %%		{radius_auth_server,{{172,20,16,75},1812,<<"secret">>}},
	     %%		{radius_acct_server,{{172,20,16,75},1813,<<"secret">>}}
	     %%   ]}
	     %% }
	     {ergw_aaa_provider,
	      {ergw_aaa_diameter,
	       [{nas_identifier, <<"nas01.dia.tpip.net">>},
		{host,           <<"nas01.dia.tpip.net">>},
		{realm,          <<"dia.tpip.net">>},
		{connect_to,     <<"aaa://172.20.16.75:3868;transport=sctp">>}
	       ]}}
	    ]},

 {hackney, [
	    {mod_metrics, exometer}
	    ]},

 {jobs, [{samplers,
	  [{cpu_feedback, jobs_sampler_cpu, []}
	  ]},
	 {queues,
	  [{path_restart,
	    [{regulators, [{counter, [{limit, 100}]}]},
	     {modifiers,  [{cpu_feedback, 10}]} %% 10 = % increment by which to modify the limit
	    ]},
	   {create,
	    [{max_time, 5000}, %% max 5 seconds
	     {regulators, [{rate, [{limit, 100}]}]},
	     {modifiers,  [{cpu_feedback, 10}]} %% 10 = % increment by which to modify the limit
	    ]},
	   {delete,
	    [{regulators, [{counter, [{limit, 100}]}]},
	     {modifiers,  [{cpu_feedback, 10}]} %% 10 = % increment by which to modify the limit
	    ]},
	   {other,
	    [{max_time, 10000}, %% max 10 seconds
	     {regulators, [{rate, [{limit, 1000}]}]},
	     {modifiers,  [{cpu_feedback, 10}]} %% 10 = % increment by which to modify the limit
	    ]}
	  ]}
	]},

 {lager, [
	  {log_root, "/var/log/gtp-c-node"},
	  {colored, true},
	  {error_logger_redirect, true},
	  {crash_log, "crash.log"},
	  {handlers, [
		      {lager_console_backend, [{level, debug}]},
		      {lager_file_backend, [{file, "error.log"}, {level, error}]},
		      {lager_file_backend, [{file, "console.log"}, {level, debug}]}
		     ]}
	 ]}
].
